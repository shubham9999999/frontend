{"version":3,"sources":["Context/ChatProvider.js","components/authentication/Login.js","components/authentication/SignUp.js","pages/HomePage.js","configs/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/UserAvatar/UserBadgeItem.js","components/UserAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/ScrollableChat.js","components/SingleChat.js","components/ChatBox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","pages/ChatPage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","children","useState","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","Provider","value","Login","show","setShow","email","setEmail","password","setPassword","picLoading","setPicLoading","toast","useToast","submitHandler","title","status","duration","isClosable","position","config","headers","axios","method","url","data","setItem","stringify","description","response","message","spacing","id","isRequired","placeholder","onChange","e","target","type","width","h","onClick","colorScheme","style","marginTop","isLoading","variant","SignUp","name","setName","confirmPassword","setConfirmPassword","pic","setPic","accept","p","pics","undefined","FormData","append","fetch","body","then","res","json","toString","catch","err","postDetails","files","HomePage","maxW","centerContent","bg","w","m","borderRadius","borderWidth","fontSize","fontFamily","display","justifyContent","mb","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","getSenderFull","ProfileModal","useDisclosure","isOpen","onOpen","onClose","base","icon","size","isCentered","flexDir","alignItems","boxSize","src","alt","md","mr","UserBadgeItem","handleFunction","admin","px","py","cursor","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","handleSearch","query","Authorization","token","get","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","d","flexWrap","pb","map","ml","slice","ScrollableChat","socket","selectedChatCompare","label","placement","hasArrow","marginRight","backgroundColor","marginLeft","padding","maxWidth","content","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","console","log","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","io","emit","on","newMessageReceived","chat","includes","sendMessage","key","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","mt","options","marginBottom","lastTyping","Date","getTime","setTimeout","height","ChatBox","ChatLoading","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","dislay","delUser","filter","sel","userToAdd","MyChats","setLoggedUser","fetchChats","paddingBottom","paddingX","lg","rightIcon","paddingY","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","setUserNow","accessChat","c","count","effect","Effect","SCALE","notif","n","as","Button","removeItem","borderBottomWidth","Chatpage","App","exact","path","component","Homepage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.427caa43.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  VStack,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useState, React, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nfunction Login() {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n  const {setUser} = ChatState()\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (userInfo) {\r\n      history.push(\"/chats\");\r\n    }\r\n  }, [history]);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please fill all the required fields.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios({\r\n        method: \"post\",\r\n        url: \"/api/user/login\",\r\n        config,\r\n        data: {\r\n          email,\r\n          password,\r\n        },\r\n      });\r\n\r\n\r\n      toast({\r\n        title: \"Log in successful.\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setUser(data);\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error occurred!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" width=\"sm\" onClick={(e) => setShow(!show)}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Log In\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SignUp() {\r\n  const [show, setShow] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please select an image.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"chats-app\");\r\n      data.append(\"cloud_name\", \"dxejarehg\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dxejarehg/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please select an image.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !password || !confirmPassword) {\r\n      toast({\r\n        title: \"Please fill all the required fields.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast({\r\n        title: \"Passwords do not match.\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios({\r\n        method: \"post\",\r\n        url: \"/api/user\",\r\n        config,\r\n        data: {\r\n          name,\r\n          email,\r\n          password,\r\n          pic,\r\n        },\r\n      });\r\n\r\n\r\n      toast({\r\n        title: \"Registration successful.\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error occurred!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"signupemail\" isRequired>\r\n        <FormLabel>Email</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"signuppassword\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Your Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" width=\"sm\" onClick={(e) => setShow(!show)}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\" confirmPassword\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup>\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm Your Password\"\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" width=\"sm\" onClick={(e) => setShow(!show)}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"Picture\" isRequired>\r\n        <FormLabel>Upload Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          p={1.5}\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import { React, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Text,\r\n  Tab,\r\n  TabPanel,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n} from \"@chakra-ui/react\";\r\nimport Login from \"../components/authentication/Login\";\r\nimport SignUp from \"../components/authentication/SignUp\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (userInfo) {\r\n      history.push(\"/chats\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Text\r\n          fontSize=\"4xl\"\r\n          fontFamily=\"Work sans\"\r\n          display={\"flex\"}\r\n          justifyContent=\"center\"\r\n        >\r\n          Chats-App\r\n        </Text>\r\n      </Box>\r\n      <Box bg={\"white\"} w=\"100%\" p={4} borderRadius=\"lg\" borderWidth={\"1px\"}>\r\n        <Tabs variant=\"soft-rounded\">\r\n          <TabList mb={\"1em\"}>\r\n            <Tab width={\"50%\"}>Log In</Tab>\r\n            <Tab width={\"50%\"}>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <SignUp />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1]?.name : users[0]?.name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1] : users[0];\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  Image,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  Text,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { ViewIcon } from \"@chakra-ui/icons\";\r\n\r\nfunction ProfileModal({ user, children }) {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}> {children} </span>\r\n      ) : (\r\n        <IconButton\r\n          display={{ base: \"flex\" }}\r\n          icon={<ViewIcon />}\r\n          onClick={onOpen}\r\n        />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h={\"410px\"}>\r\n          <ModalHeader\r\n            display={\"flex\"}\r\n            justifyContent=\"center\"\r\n            fontSize={\"40px\"}\r\n            fontFamily=\"Work sans\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius={\"full\"}\r\n              boxSize=\"150px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"28px\", md: \"30px\" }}\r\n              fontFamily=\"Work sans\"\r\n            >\r\n              Email: {user.email}\r\n            </Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileModal;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar, Box, Text } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction UserListItem({user, handleFunction }) {\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        onClick={handleFunction}\r\n        cursor=\"pointer\"\r\n        bg=\"#E8E8E8\"\r\n        _hover={{\r\n          background: \"#38B2AC\",\r\n          color: \"white\",\r\n        }}\r\n        w=\"100%\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        color=\"black\"\r\n        px={3}\r\n        py={2}\r\n        mb={2}\r\n        borderRadius=\"lg\"\r\n      >\r\n        <Avatar\r\n          mr={2}\r\n          size=\"sm\"\r\n          cursor=\"pointer\"\r\n          name={user.name}\r\n          src={user.pic}\r\n        />\r\n        <Box>\r\n          <Text>{user.name}</Text>\r\n          <Text fontSize=\"x-small\">\r\n            <b>Email : </b>\r\n            {user.email}\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserListItem;\r\n","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/user?search=${search}`,\r\n        config\r\n      );\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/renameGroup`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/addToGroup`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/chat/removeFromGroup`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody display=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl display=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.slice(0, 4).map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Avatar, Tooltip } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../configs/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nfunction ScrollableChat({ messages }) {\r\n  const { user } = ChatState();\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n                <Tooltip\r\n                  label={m.sender.name}\r\n                  placement={\"bottom-start\"}\r\n                  hasArrow\r\n                >\r\n                  <Avatar\r\n                    marginTop={\"7px\"}\r\n                    marginRight={\"1px\"}\r\n                    size=\"sm\"\r\n                    src={m.sender.pic}\r\n                    name={m.sender.name}\r\n                    cursor=\"pointer\"\r\n                  />\r\n                </Tooltip>\r\n              )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n}\r\n\r\nexport default ScrollableChat;\r\n","import { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  Spinner,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { getSender, getSenderFull } from \"../configs/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport \"./styles.css\";\r\nimport io from \"socket.io-client\";\r\nimport animationData from \"../animations/typing.json\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nconst ENDPOINT = \"https://chats-app-project.herokuapp.com/\";\r\nvar socket, selectedChatCompare;\r\n\r\nfunction SingleChat({ fetchAgain, setFetchAgain }) {\r\n  const { user, selectedChat, setSelectedChat, notification, setNotification } =\r\n    ChatState();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [socketConnected, setSocketConnected] = useState();\r\n  const [typing, setTyping] = useState(false);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  console.log(notification, \"---------\");\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message received\", (newMessageReceived) => {\r\n      if (\r\n        !selectedChatCompare ||\r\n        selectedChatCompare._id !== newMessageReceived.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageReceived)) {\r\n          setNotification([newMessageReceived, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageReceived]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) {\r\n      return;\r\n    }\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to load the messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (e) => {\r\n    if (e.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        setNewMessage(\"\");\r\n        const { data } = await axios({\r\n          method: \"post\",\r\n          url: \"/api/message\",\r\n          data: { chatId: selectedChat._id, content: newMessage },\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        });\r\n\r\n        socket.emit(\"newMessage\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n\r\n    let lastTyping = new Date().getTime();\r\n    let timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTyping;\r\n\r\n      if (timeDiff > timerLength) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              display={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {!selectedChat.isGroupChat ? (\r\n              <>\r\n                {getSender(user, selectedChat.users)}\r\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                {selectedChat.chatName.toUpperCase()}\r\n                <UpdateGroupChatModal\r\n                  fetchAgain={fetchAgain}\r\n                  setFetchAgain={setFetchAgain}\r\n                  fetchMessages={fetchMessages}\r\n                />\r\n              </>\r\n            )}\r\n          </Text>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size={\"xl\"}\r\n                alignSelf=\"center\"\r\n                margin={\"auto\"}\r\n                w={20}\r\n                h={20}\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl onKeyDown={sendMessage} isRequired mt={3}>\r\n              {isTyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  ></Lottie>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant={\"filled\"}\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message\"\r\n                onChange={typingHandler}\r\n                value={newMessage}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          height=\"100%\"\r\n        >\r\n          <Text fontSize=\"3xl\" fontFamily=\"Work sans\" pb={3}>\r\n            Click on user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleChat;\r\n","import { Box } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport SingleChat from \"./SingleChat\";\r\n\r\nfunction ChatBox({fetchAgain, setFetchAgain}) {\r\n  const { selectedChat } = ChatState();\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      width={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    ><SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain}/></Box>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../UserAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\n\r\nfunction GroupChatModal({ children }) {\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleAddUser = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(\r\n        `/api/user?search=${search}`,\r\n        config\r\n      );\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios({\r\n        method: \"post\",\r\n        url: \"/api/chat/group\",\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n        data: {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n      });\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Work sans\"\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody dislay=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box width=\"100%\" display=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleAddUser(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GroupChatModal;\r\n","import { useToast, Box, Button, Text, Stack } from \"@chakra-ui/react\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport { getSender } from \"../configs/ChatLogics\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\n\r\nfunction MyChats({fetchAgain}) {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const { user, selectedChat, setSelectedChat, chats, setChats } = ChatState();\r\n  const toast = useToast();\r\n  const fetchChats = async () => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        \"/api/chat\",\r\n        config\r\n      );\r\n\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n      <Box\r\n        display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n        flexDir=\"column\"\r\n        alignItems=\"center\"\r\n        padding={3}\r\n        background=\"white\"\r\n        width= {{base: \"100%\", md:\"32%\"}}\r\n        height={\"100%\"}\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <Box\r\n          paddingBottom={3}\r\n          paddingX={3}\r\n          fontSize={{ base: \"28px\", md: \"30px\" }}\r\n          fontFamily=\"Work sans\"\r\n          display=\"flex\"\r\n          width=\"100%\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          My Chats\r\n            <GroupChatModal>\r\n              <Button\r\n                display=\"flex\"\r\n                fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n                rightIcon={<AddIcon />}\r\n              >\r\n                New Group Chat\r\n              </Button>\r\n            </GroupChatModal>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDir=\"column\"\r\n          padding={3}\r\n          background=\"#F8F8F8\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          borderRadius=\"lg\"\r\n          overflowY=\"hidden\"\r\n        >\r\n          {chats ? (\r\n            <Stack overflowY=\"scroll\">\r\n              {chats.map((chat) => (\r\n                <Box\r\n                  onClick={() => setSelectedChat(chat)}\r\n                  cursor=\"pointer\"\r\n                  background={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                  color={selectedChat === chat ? \"white\" : \"black\"}\r\n                  paddingX={3}\r\n                  paddingY={2}\r\n                  borderRadius=\"lg\"\r\n                  key={chat._id}\r\n                >\r\n                  <Text>\r\n                    {!chat.isGroupChat\r\n                      ? getSender(loggedUser, chat.users)\r\n                      : chat.chatName}\r\n                  </Text>\r\n                  {chat.latestMessage && (\r\n                    <Text fontSize=\"xs\">\r\n                      <b>{chat.latestMessage.sender.name} : </b>\r\n                      {chat.latestMessage.content.length > 50\r\n                        ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                        : chat.latestMessage.content}\r\n                    </Text>\r\n                  )}\r\n                </Box>\r\n              ))}\r\n            </Stack>\r\n          ) : (\r\n            <ChatLoading />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n  );\r\n}\r\n\r\nexport default MyChats;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Tooltip,\r\n  Text,\r\n  Menu,\r\n  MenuButton,\r\n  Avatar,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuDescendantsProvider,\r\n  MenuDivider,\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  Input,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { React, useState, useEffect } from \"react\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../UserAvatar/UserListItem\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { getSender } from \"../../configs/ChatLogics\";\r\nimport {Effect} from \"react-notification-badge\"\r\nimport NotificationBadge from \"react-notification-badge/lib/components/NotificationBadge\";\r\n\r\nexport default function SideDrawer() {\r\n  const [search, setSearch] = useState();\r\n  const [searchResult, setSearchResult] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState();\r\n  const {\r\n    user,\r\n    setSelectedChat,\r\n    chats,\r\n    setChats,\r\n    notification,\r\n    setNotification,\r\n  } = ChatState();\r\n  const history = useHistory();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const [userNow, setUserNow] = useState({});\r\n\r\n  useEffect(() => {\r\n    setUserNow(user);\r\n  }, [user]);\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      toast({\r\n        title: \"Please Enter something in search\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top-left\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/user?search=${search}`,\r\n        config\r\n      );\r\n\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    try {\r\n      setLoadingChat(true);\r\n      const { data } = await axios({\r\n        method: \"post\",\r\n        url: \"/api/chat\",\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n        data: {\r\n          userId,\r\n        },\r\n      });\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n            <i className=\"fas fa-search\"></i>\r\n            <Text display={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Search User\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          Chats-App\r\n        </Text>\r\n        <Menu>\r\n          <MenuButton p={1}>\r\n            <NotificationBadge count={notification.length} effect={Effect.SCALE}></NotificationBadge>\r\n            <BellIcon fontSize={\"2xl\"} m=\"1\" />\r\n          </MenuButton>\r\n          <MenuList pl={2}>\r\n            {!notification.length && \"No new messages\"}\r\n            {notification.map((notif) => (\r\n              <MenuItem\r\n                key={notif._id}\r\n                onClick={() => {\r\n                  setSelectedChat(notif.chat);\r\n                  setNotification(notification.filter((n) => n != notif));\r\n                }}\r\n              >\r\n                {notif.chat.isGroupChat\r\n                  ? `New Message in ${notif.chat.chatName}`\r\n                  : `New message from ${getSender(user, notif.chat.users)}`}\r\n              </MenuItem>\r\n            ))}\r\n          </MenuList>\r\n        </Menu>\r\n        <Menu>\r\n          <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n            <Avatar\r\n              size=\"sm\"\r\n              cursor=\"pointer\"\r\n              name={user.name}\r\n              src={user.pic}\r\n            />\r\n          </MenuButton>\r\n          <MenuList>\r\n            <ProfileModal user={user}>\r\n              <MenuItem>My Profile</MenuItem>\r\n            </ProfileModal>\r\n            <MenuDivider></MenuDivider>\r\n            <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n          </MenuList>\r\n        </Menu>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth={\"1px\"}>Serach Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box display={\"flex\"} pb={2}>\r\n              <Input\r\n                placeholder=\"Search By name or email\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <UserListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => accessChat(user._id)}\r\n                />\r\n              ))\r\n            )}\r\n            {loadingChat && <Spinner ml=\"auto\" display=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/ChatBox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  let { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box display=\"flex\" justifyContent=\"center\" width=\"100%\" height=\"91vh\" >\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import \"./App.css\";\nimport Homepage from \"./pages/HomePage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./pages/ChatPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Homepage} />\n      <Route exact path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ChatProvider from \"./Context/ChatProvider\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChatProvider>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </ChatProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}